@model AutoTest.Models.NewTestView

@{
    ViewBag.Title = "Start";
}

<h2>Create</h2>
@if (ViewBag.Msg != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Msg
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Test</h4>*@
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.Date)
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>*@


                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">



                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.QuestionDetails.Count() == 0 && Model.SummaryDetails.Count() == 0)
{
    <h4><strong>Before starting...</strong></h4>
    <hr />
    <br />
    <ul>
        <li>It will start with the Business Entities and then with the Summary Importance</li>
        <li>To rate select a number from 1 to 3</li>
        <li>When you get to evaluate Summary Importance and finish evaluating it, press the Finish button</li>
        <li>When you press the Finish button, the AutoTest will end, and the system will make some calculations and you will be able to see or download your results in the My Results section</li>
    </ul>
    <br />
    <br />
  

    <div class="col-md-12 text-right">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Start", "ListQuestionDetailTmp", new { }, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}


@if (Model.QuestionDetails.Count() != 0 && Model.SummaryDetails.Count() == 0)
{
    WebGrid grid = new WebGrid(Model.QuestionDetails, rowsPerPage: 16);

    <div class="row">
        @grid.GetHtml(
         tableStyle: "table table-responsive table-striped table-bordered",
         columns: grid.Columns(
             grid.Column(header: "QuestionDetail", format: @<text><div class="" data-id="@item.TestQuestionDetailTmpID" data-propertyname="Name">@item.QuestionName</div></text>),
grid.Column(header: "Value", format:@<text><div class="editSelect" data-id="@item.TestQuestionDetailTmpID" data-propertyname="TestAnswerID">@item.TestAnswer.Value</div></text>)
)
)
    </div>

    <div class="col-md-12 text-right">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
                @Html.ActionLink("Save and Next", "ListSummaryDetailTmp", new { }, new { @class = "btn btn-info" })

            </div>
        </div>
    </div>
}


@section scripts{
    <script src="https://www.appelsiini.net/download/jquery.jeditable.js"></script>

    <script>

        $('.editSelect').editable('/TestHeaders/EditQuestionDetailTmp', {
            cssclass: 'jeditForm',
            tooltip: 'Valorar',
            width: 'none',
            height: 'none',
            type: 'select',
            submit: 'Ok',
            loadurl: '/TestHeaders/GetQuestionDetailTmpAnswer',
            loaddata: function () {
                return { id: $(this).data('id') }
            },
            onsubmit: function (settings, original) {
                oldValue = original.revert;
            },
            submitdata: function () {
                return {
                    id: $(this).data('id'),
                    PropertyName: $(this).data('propertyname')
                }
            },
            callback: function (value, settings) {
                var jsonData = $.parseJSON(value);
                if (jsonData.status) {
                    $(this).text(jsonData.value);
                }
                else {
                    $(this).text(oldValue);
                }
            }
        })
        $('.editSelect').click(function () {
            $('select', this).addClass('form-control pull-left 100');
            $('button', this).addClass('btn btn-primary margin10');
        })
    </script>



    @if (Model.SummaryDetails.Count() != 0 && Model.QuestionDetails.Count() != 0)
    {

        WebGrid grid = new WebGrid(Model.SummaryDetails, rowsPerPage: 8);

        <div class="row">
            @grid.GetHtml(
             tableStyle: "table table-responsive table-striped table-bordered",
             columns: grid.Columns(
                 grid.Column(header: "SummaryImportance", format: @<text><div class="" data-id="@item.TestSummaryDetailTmpID" data-propertyname="Name">@item.SubCategoryName</div></text>),
grid.Column(header: "Value", format:@<text><div class="editSelect" data-id="@item.TestSummaryDetailTmpID" data-propertyname="TestAnswerID">@item.TestAnswer.Value</div></text>)
)
)

        </div>
        <div class="col-md-12 text-right">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
                    <input type="submit" value="Finish" class="btn btn-primary" />

                </div>
            </div>
        </div>

    }

    <script src="https://www.appelsiini.net/download/jquery.jeditable.js"></script>
    <script>
        $('.editSelect').editable('/TestHeaders/EditSummaryDetailTmp', {
            cssclass: 'jeditForm',
            tooltip: 'Valorar',
            width: 'none',
            height: 'none',
            type: 'select',
            submit: 'Ok',
            loadurl: '/TestHeaders/GetSummaryDetailTmpAnswer',
            loaddata: function () {
                return { id: $(this).data('id') }
            },
            onsubmit: function (settings, original) {
                oldValue = original.revert;
            },
            submitdata: function () {
                return {
                    id: $(this).data('id'),
                    PropertyName: $(this).data('propertyname')
                }
            },
            callback: function (value, settings) {
                var jsonData = $.parseJSON(value);
                if (jsonData.status) {
                    $(this).text(jsonData.value);
                }
                else {
                    $(this).text(oldValue);
                }
            }
        })
        $('.editSelect').click(function () {
            $('select', this).addClass('form-control pull-left 100');
            $('button', this).addClass('btn btn-primary margin10');
        })
    </script>
}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

